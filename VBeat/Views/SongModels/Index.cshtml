@model IEnumerable<VBeat.Models.SongModel>

@{
    ViewData["Title"] = "Index";
}

<section id="new-releases">
    <div><h1>New Releases</h1></div>
    <div id="carousel">
        @foreach (var item in (IEnumerable<SongModel>)ViewData["NEW_RELEASES"])
        {
            <div class="song-container">
                <a asp-action="Edit" asp-route-id="@item.SongId">
                    <img class ="@Html.DisplayFor(modelItem => item.SongId)" src="@Html.DisplayFor(modelItem => item.SongImagePath)" width="30%" height="60%" />
                </a>             
            </div>
        }
    </div>
    <div id="song-details-container">
        @foreach (var item in (IEnumerable<SongModel>)ViewData["NEW_RELEASES"])
        {
            <div  class="@Html.DisplayFor(modelItem => item.SongId) song-wrapper">
                <p class="song-name"> @Html.DisplayFor(modelItem => item.SongName)</p>
                <p class="song-artists">
                 @foreach (var artist in item.ArtistList)
                 {
                     @Html.DisplayFor(modelArtist => artist.Artist.ArtistName) <br/>
                 }
                </p>
            </div>
        }
   </div>
</section>

<section id="recently-played">
    <div class="middle-container">
        <h1>Recently Played</h1>

        <p>save in db because even after refresh it is still shown</p>
    </div>
</section>

