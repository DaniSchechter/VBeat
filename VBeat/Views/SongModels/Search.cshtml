
@{
    ViewData["Title"] = "SearchView";
    int offset = (int)ViewData["Offset"];
    string artistName = (string)ViewData["ArtistName"];
    string songName = (string)ViewData["SongName"];
    string genreName = (string)ViewData["Genre"];
    string baseUrl = "?artistName=" + System.Net.WebUtility.UrlEncode(artistName)
        + "&songName=" + System.Net.WebUtility.UrlEncode(songName)
        + "&genre=" + System.Net.WebUtility.UrlEncode(genreName);
    string nextUrl = baseUrl + "&offset=" + (offset + 1);
    string prevUrl = null;
    if (offset == 0)
    {
        prevUrl = "#";
    }
    else
    {
        prevUrl = baseUrl + "&offset=" + (offset - 1);
    }
}

<div class="container">
    <h2>Search for songs</h2>
    <div class="row">
        <form class="form-inline" method="get" asp-controller="SongModels" asp-action="Search">
            
            <label class="sr-only" for="inlineFormInput">Artist Name</label>
            <input type="text" class="form-control mb-2 mr-sm-2 mb-sm-0" id="artistName" name="artistName" placeholder="Artist Name">

            <label class="sr-only" for="inlineFormInputGroup">Song Name</label>
            <input type="text" class="form-control mb-2 mr-sm-2 mb-sm-0" id="songName" name="songName" placeholder="Song Name">

            <label class="sr-only" for="inlineFormInput">Genre</label>

            <select type="text" class="form-control mb-2 mr-sm-2 mb-sm-0" id="genre" name="genre" placeholder="Genre">
                <option value="">All</option>
                @foreach (var item in Enum.GetValues(typeof(enum_Genre)))
                {
                    <option value="@item">@item</option>
                }
            </select>

            <input type="hidden" name="offset" value="0"/>
            <button type="submit" class="btn btn-primary">Submit</button>
            <a href="@Html.Raw(nextUrl)" class="btn btn-warning" id="nextPage">Next Page</a>
            <a href="@Html.Raw(prevUrl)" class="btn btn-warning" id="prevPage">Previous Page</a>
        </form>
    </div>

    <div class="row">
        @if (ViewData["Songs"] != null)
        {

            List<SongModel> Songs = ((IQueryable<SongModel>)ViewData["Songs"]).ToList();

            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">Song Image</th>
                        <th scope="col">Details</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Songs.Count(); i++)
                    {
                        SongModel curSong = Songs[i];

                        <tr>
                            <td>
                                <div class="col-sm-5">
                                    <div class="card">
                                        <h1>@curSong.SongName</h1>
                                        <div class="card-image-container">
                                            <img src="@curSong.SongImagePath" alt="Image Not Found" />
                                        </div>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div class="col-sm-8 ">
                                    <div class="playlist-song-container">
                                        <div class="song-genre"><p class="first-info">@Html.DisplayNameFor(curSongModel => curSong.Genre): </p><p class="second-info">@curSong.Genre</p></div>
                                    </div>
                                    <div class="playlist-song-container">
                                        <div class="Url2Mp3"><p class="first-info">@Html.DisplayNameFor(curSongModel => curSong.SongPath): </p><p class="second-info">@curSong.SongPath</p></div>
                                    </div>
                                    <div class="playlist-song-container">
                                        <div class="addedDate"><p class="first-info">@Html.DisplayNameFor(curSongModel => curSong.AddedDate):  </p><p class="second-info">@curSong.AddedDate</p></div>
                                    </div>
                                    <div class="playlist-song-container">
                                        <div class="releaseDate"><p class="first-info">@Html.DisplayNameFor(curSongModel => curSong.ReleaseDate): </p><p class="second-info">@curSong.ReleaseDate</p></div>
                                    </div>

                                    <div class="playlist-song-container">
                                        <div class="artists">
                                            <p class="first-info">Artists:</p>
                                            <p class="second-info">
                                                @foreach (var a in curSong.ArtistList)
                                                {
                                                    <span>@a.Artist.ArtistName</span>
                                                    @if (a != curSong.ArtistList.ElementAt(curSong.ArtistList.Count - 1))
                                                    {
                                                        <span>, </span>
                                                    }
                                                }
                                            </p>
                                        </div>
                                    </div>

                                    <a asp-action="Edit" asp-route-id="@curSong.SongId">Edit</a> |
                                    <a asp-action="Details" asp-route-id="@curSong.SongId">Details</a> |
                                    <a asp-action="Delete" asp-route-id="@curSong.SongId">Delete</a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }

    </div>
</div>


