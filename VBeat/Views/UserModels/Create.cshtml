@model VBeat.Models.UserModel

@{
    ViewData["Title"] = "Create";
    this.Layout = "NotSignedInLayout";
}

<div class="row form-wrapper">
    <h1>Sign Up User</h1>
    
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group form-item">
                <input asp-for="Username" placeholder="Username" />
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>
            <div class="form-group form-item">
                <input asp-for="FirstName" placeholder="First Name" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div class="form-group form-item">
                <input asp-for="LastName" placeholder="Last Name" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
            <div class="form-group form-item">
                <input asp-for="Email" placeholder="Email Address" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group form-item">
                <input asp-for="Password" type="Password" placeholder="Password" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group button-panel">
                <input type="submit" title="Sign Up" value="Sign Up" class="button" />
            </div>
        </form>
        <span style="text-align: center" class="text-danger">@ViewData["Error"]</span>
<div class="form-footer"></div>

</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
